#include<iostream>
#include<cstdio>
#include<cctype>

namespace GTI
{
    char gc(void)
       {
        const int S = 1 << 16;
        static char buf[S], *s = buf, *t = buf;
        if (s == t) t = buf + fread(s = buf, 1, S, stdin);
        if (s == t) return EOF;
        return *s++;
    }
    int gti(void)
       {
        int a = 0, b = 1, c = gc();
        for (; !isdigit(c); c = gc()) b ^= (c == '-');
        for (; isdigit(c); c = gc()) a = a * 10 + c - '0';
        return b ? a : -a;
    }
}
using GTI::gti;
using namespace std;

const int N = 1e5 + 10;

typedef long long LL;

int n;
double y[N];

int main(){
    int T;
    T = gti();
    while (T--) {
        n = gti();
        
        double sx = n * (n + 1) / 2, sy = 0, sxy = 0, sx2 = n * (n + 1) * (2 * n + 1) / 6;
        for (int i = 1; i <= n; ++i) {
            y[i] = gti();
            //sx += i;
            //sx2 += i * i;
            sy += y[i];
            sxy += i * y[i];
        }
        
        double b2 = (n  * sxy - sx * sy) / (n * sx2 - sx * sx);
        double b1 = (sy - sx * b2) / n;
        
        double res = 0;
        for (int i = 1; i <= n; ++i) {
            double t = y[i] - b1 - b2 * i;
            res += t * t;
        }
        //printf("%.15lf %.15lf\n", b1, b2);
        printf("%.15lf\n", res);
    }
    
    return 0;
}